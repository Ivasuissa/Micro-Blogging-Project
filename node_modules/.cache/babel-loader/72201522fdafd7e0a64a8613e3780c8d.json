{"ast":null,"code":"var _jsxFileName = \"/Users/evasuissa/Desktop/ITC2/React/AssignmentTwitter/twitterass/src/components/TweetsList.js\";\nimport React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport { getMessage } from \"./lib/api\";\nimport DisplayTweet from \"./Tweet\";\n\nclass TweetsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      myTweet: \"\"\n    };\n    this.getTweetFunc = this.getTweetFunc.bind(this);\n  }\n\n  getTweetFunc() {\n    getMessage().then(response => {\n      // console.log(response);\n      console.log(response.data.tweets);\n      this.setState({\n        tweets: response.data.tweets\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getTweetFunc(); // try {\n    //   setInterval(this.getTweetFunc, 10000);\n    // } catch (e) {\n    //   console.error(e);\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, this.state.messages.map((message, i) => /*#__PURE__*/React.createElement(Message, {\n      textMessage: message.textMessage,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }) // <DisplayTweet\n    //   userName={tweet.userName}\n    //   date={tweet.date}\n    //   content={tweet.content}\n    //   key={[tweet.date, +\"by \" + tweet.userName]}\n    // />\n    )));\n  }\n\n}\n\nexport default TweetsList;","map":{"version":3,"sources":["/Users/evasuissa/Desktop/ITC2/React/AssignmentTwitter/twitterass/src/components/TweetsList.js"],"names":["React","Component","Message","getMessage","DisplayTweet","TweetsList","constructor","props","state","tweets","myTweet","getTweetFunc","bind","then","response","console","log","data","setState","componentDidMount","render","messages","map","message","i","textMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,YAAP,MAAyB,SAAzB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACbR,IAAAA,UAAU,GAAGU,IAAb,CAAkBC,QAAQ,IAAI;AAC5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcR,MAA1B;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEK,QAAQ,CAACG,IAAT,CAAcR;AAAxB,OAAd;AACD,KAJD;AAKD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,YAAL,GADkB,CAElB;AACA;AACA;AACA;AACA;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWa,QAAX,CAAoBC,GAApB,CAAwB,CAACC,OAAD,EAAUC,CAAV,kBACvB,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAED,OAAO,CAACE,WAA9B;AAA2C,MAAA,GAAG,EAAED,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AAPD,KADH,CADF,CADF;AAeD;;AA3CgC;;AA6CnC,eAAenB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport { getMessage } from \"./lib/api\";\nimport DisplayTweet from \"./Tweet\";\n\nclass TweetsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      myTweet: \"\"\n    };\n    this.getTweetFunc = this.getTweetFunc.bind(this);\n  }\n\n  getTweetFunc() {\n    getMessage().then(response => {\n      // console.log(response);\n      console.log(response.data.tweets);\n      this.setState({ tweets: response.data.tweets });\n    });\n  }\n\n  componentDidMount() {\n    this.getTweetFunc();\n    // try {\n    //   setInterval(this.getTweetFunc, 10000);\n    // } catch (e) {\n    //   console.error(e);\n    // }\n  }\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.messages.map((message, i) => (\n            <Message textMessage={message.textMessage} key={i} />\n            // <DisplayTweet\n            //   userName={tweet.userName}\n            //   date={tweet.date}\n            //   content={tweet.content}\n            //   key={[tweet.date, +\"by \" + tweet.userName]}\n            // />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default TweetsList;\n"]},"metadata":{},"sourceType":"module"}