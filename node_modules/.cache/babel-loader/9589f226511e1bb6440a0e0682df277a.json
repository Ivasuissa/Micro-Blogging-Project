{"ast":null,"code":"var _jsxFileName = \"/Users/evasuissa/Desktop/ITC2/React/AssignmentTwitter/twitterass/src/components/TweetsList.js\";\nimport React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport { getMessage } from \"./lib/api\";\nimport DisplayTweet from \"./Tweet\";\n\nclass TweetsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      myTweet: ''\n    };\n    this.getTweetFunc = this.getTweetFunc.bind(this);\n  }\n\n  getTweetFunc() {\n    getMessage().then(response => {\n      // console.log(response);\n      console.log(response.data.tweets);\n      this.setState({\n        tweets: response.data.tweets\n      });\n    });\n  }\n\n  createTweetFunc() {\n    let newTweet = {\n      userName: 'Eva',\n      content: \"\",\n      date: new Date().toISOString()\n    };\n    this.setState({\n      tweets: [newTweet, ...this.state.tweets],\n      userName: \"Eva\"\n    });\n  }\n\n  componentDidMount() {\n    this.getTweetFunc();\n\n    try {\n      setInterval(this.getTweetFunc, 10000);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, this.state.tweets.map(tweet =>\n    /*#__PURE__*/\n    // <Message textMessage={message.textMessage} key={i} />\n    React.createElement(DisplayTweet, {\n      userName: tweet.userName,\n      date: tweet.date,\n      content: tweet.content,\n      key: [tweet.date, +\"by \" + tweet.userName],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default TweetsList;","map":{"version":3,"sources":["/Users/evasuissa/Desktop/ITC2/React/AssignmentTwitter/twitterass/src/components/TweetsList.js"],"names":["React","Component","Message","getMessage","DisplayTweet","TweetsList","constructor","props","state","tweets","myTweet","getTweetFunc","bind","then","response","console","log","data","setState","createTweetFunc","newTweet","userName","content","date","Date","toISOString","componentDidMount","setInterval","e","error","render","map","tweet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,YAAP,MAAyB,SAAzB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAC;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACbR,IAAAA,UAAU,GAAGU,IAAb,CAAkBC,QAAQ,IAAI;AAC5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcR,MAA1B;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEK,QAAQ,CAACG,IAAT,CAAcR;AAAxB,OAAd;AACD,KAJD;AAKD;;AACDU,EAAAA,eAAe,GAAE;AACf,QAAIC,QAAQ,GAAE;AACZC,MAAAA,QAAQ,EAAC,KADG;AAEZC,MAAAA,OAAO,EAAC,EAFI;AAGZC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAHM,KAAd;AAKA,SAAKP,QAAL,CAAc;AACZT,MAAAA,MAAM,EAAE,CAACW,QAAD,EAAW,GAAG,KAAKZ,KAAL,CAAWC,MAAzB,CADI;AAEZY,MAAAA,QAAQ,EAAC;AAFG,KAAd;AAMD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,YAAL;;AACA,QAAI;AACFgB,MAAAA,WAAW,CAAC,KAAKhB,YAAN,EAAoB,KAApB,CAAX;AACD,KAFD,CAEE,OAAOiB,CAAP,EAAU;AACVb,MAAAA,OAAO,CAACc,KAAR,CAAcD,CAAd;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,KAAL,CAAWC,MAAX,CAAkBsB,GAAlB,CAAsBC,KAAK;AAAA;AAC1B;AACA,wBAAC,YAAD;AACE,MAAA,QAAQ,EAAEA,KAAK,CAACX,QADlB;AAEE,MAAA,IAAI,EAAEW,KAAK,CAACT,IAFd;AAGE,MAAA,OAAO,EAAES,KAAK,CAACV,OAHjB;AAIE,MAAA,GAAG,EAAE,CAACU,KAAK,CAACT,IAAP,EAAa,CAAC,KAAD,GAASS,KAAK,CAACX,QAA5B,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADH,CADF,CADF;AAeD;;AAxDgC;;AA0DnC,eAAehB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport { getMessage } from \"./lib/api\";\nimport DisplayTweet from \"./Tweet\";\n\nclass TweetsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      myTweet:''\n    };\n    this.getTweetFunc = this.getTweetFunc.bind(this);\n  }\n\n  getTweetFunc() {\n    getMessage().then(response => {\n      // console.log(response);\n      console.log(response.data.tweets);\n      this.setState({ tweets: response.data.tweets });\n    });\n  }\n  createTweetFunc(){\n    let newTweet ={\n      userName:'Eva',\n      content:\"\",\n      date: new Date().toISOString(),\n    }\n    this.setState({\n      tweets: [newTweet, ...this.state.tweets],\n      userName:\"Eva\"\n      \n    })\n\n  }\n\n  componentDidMount() {\n    this.getTweetFunc();\n    try {\n      setInterval(this.getTweetFunc, 10000);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.tweets.map(tweet => (\n            // <Message textMessage={message.textMessage} key={i} />\n            <DisplayTweet\n              userName={tweet.userName}\n              date={tweet.date}\n              content={tweet.content}\n              key={[tweet.date, +\"by \" + tweet.userName]}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default TweetsList;\n"]},"metadata":{},"sourceType":"module"}