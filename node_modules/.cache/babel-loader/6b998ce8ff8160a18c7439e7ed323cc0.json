{"ast":null,"code":"var _jsxFileName = \"/Users/evasuissa/Desktop/ITC2/React/AssignmentTwitter/twitterass/Micro-Blogging-Project/src/components/TweetsList.js\";\nimport React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport { getMessage } from \"./lib/api\";\n\nclass TweetsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      myTweet: \"\"\n    };\n    this.getTweetFunc = this.getTweetFunc.bind(this);\n  }\n\n  getTweetFunc() {\n    getMessage().then(response => {\n      console.log(response);\n      console.log(response.data.tweets);\n      this.setState({\n        tweets: response.data.tweets\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getTweetFunc();\n\n    try {\n      setInterval(this.getTweetFunc, 10000);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, this.state.tweets.map(tweet =>\n    /*#__PURE__*/\n    // <Message textMessage={message.textMessage} key={i} />\n    React.createElement(DisplayTweet, {\n      userName: tweet.userName,\n      date: tweet.date,\n      content: tweet.content,\n      key: [tweet.date, +\"by \" + tweet.userName],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default TweetsList;","map":{"version":3,"sources":["/Users/evasuissa/Desktop/ITC2/React/AssignmentTwitter/twitterass/Micro-Blogging-Project/src/components/TweetsList.js"],"names":["React","Component","Message","getMessage","TweetsList","constructor","props","state","tweets","myTweet","getTweetFunc","bind","then","response","console","log","data","setState","componentDidMount","setInterval","e","error","render","map","tweet","userName","date","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACbP,IAAAA,UAAU,GAAGS,IAAb,CAAkBC,QAAQ,IAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcR,MAA1B;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEK,QAAQ,CAACG,IAAT,CAAcR;AAAxB,OAAd;AACD,KAJD;AAKD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,YAAL;;AACA,QAAI;AACFS,MAAAA,WAAW,CAAC,KAAKT,YAAN,EAAoB,KAApB,CAAX;AACD,KAFD,CAEE,OAAOU,CAAP,EAAU;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAcD,CAAd;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAsBC,KAAK;AAAA;AAC1B;AACA,wBAAC,YAAD;AACE,MAAA,QAAQ,EAAEA,KAAK,CAACC,QADlB;AAEE,MAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,MAAA,GAAG,EAAE,CAACH,KAAK,CAACE,IAAP,EAAa,CAAC,KAAD,GAASF,KAAK,CAACC,QAA5B,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADH,CADF,CADF;AAeD;;AA3CgC;;AA6CnC,eAAerB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Message from \"./Message\";\nimport { getMessage } from \"./lib/api\";\n\nclass TweetsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      myTweet: \"\"\n    };\n    this.getTweetFunc = this.getTweetFunc.bind(this);\n  }\n\n  getTweetFunc() {\n    getMessage().then(response => {\n      console.log(response);\n      console.log(response.data.tweets);\n      this.setState({ tweets: response.data.tweets });\n    });\n  }\n\n  componentDidMount() {\n    this.getTweetFunc();\n    try {\n      setInterval(this.getTweetFunc, 10000);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.tweets.map(tweet => (\n            // <Message textMessage={message.textMessage} key={i} />\n            <DisplayTweet\n              userName={tweet.userName}\n              date={tweet.date}\n              content={tweet.content}\n              key={[tweet.date, +\"by \" + tweet.userName]}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default TweetsList;\n"]},"metadata":{},"sourceType":"module"}